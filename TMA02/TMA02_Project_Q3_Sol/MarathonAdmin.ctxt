#BlueJ class context
comment0.params=
comment0.target=MarathonAdmin()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ MarathonAdmin\n
comment1.params=anAge
comment1.target=java.lang.String\ getAgeGroup(int)
comment1.text=\n\ Helper\ method\ to\ decide\ runner\ age\ group\n\ @param\ int\ anAge\n\ @return\ String\ ageGroup\ -\ either\ "junior",\ "standard"\ or\ "senior"\n
comment2.params=anAge
comment2.target=java.lang.String\ getAgeGroup2(int)
comment2.text=\n\ Improved\ helper\ method\ to\ decide\ runner\ age\ group.\ This\ time\ error\ checking\n\ has\ been\ added\ to\ help\ sanitise\ the\ data.\ I\ have\ made\ the\ assumption\ that\ and\n\ age\ of\ 0,\ less\ than\ 5\ or\ greater\ than\ 130\ is\ not\ realistic\ data\ for\ a\ marathon\n\ runner,\ so\ used\ a\ combination\ of\ an\ assertion\ and\ exceptions\ to\ improve\ the\n\ robustness\ of\ the\ code.\ Further\ reasoning\ provided\ in\ comments\ below.\n\ @param\ int\ anAge\ -\ must\ be\ postive,\ greater\ than\ 5\ and\ less\ than\ 130\ years\ old\n\ @return\ String\ ageGroup\ -\ either\ "junior",\ "standard"\ or\ "senior"\n
comment3.params=
comment3.target=void\ readInRunners()
comment3.text=\n\ Method\ will\ read\ from\ a\ selected\ file\ (should\ be\ runners.txt)\n\ and\ create\ a\ runner\ object\ from\ a\ chosen\ text\ file\ with\ comma\ separated\ values\n
comment4.params=
comment4.target=int\ getRunTime()
comment4.text=\n\ Helper\ method\ to\ get\ random\ number\ for\ marathon\ time\ of\ each\ Runner.\n\ @param\n\ @return\ random\ number\ between\ 90\ and\ 180\n
comment5.params=
comment5.target=void\ runMarathon()
comment5.text=\n\ Pulic\ method\ that\ takes\ no\ args\ and\ returns\ no\ value.\ Method\ will\ iterate\ over\ \n\ the\ runners\ and\ assign\ a\ random\ number\ in\ the\ range\ 90\ -\ 180\ inclusive\ for\n\ the\ time\ attribute\n
comment6.params=
comment6.target=void\ sortRunnerList()
comment6.text=\n\ Public\ method\ that\ takes\ no\ arguments\ and\ returns\ no\ value.\ The\ method\ sorts\ the\ \n\ receiver's\ runners\ list\ by\ the\ time\ each\ runner\ has\ taken\ to\ complete\ the\ marathon\n\ so\ that\ the\ fastest\ runner\ is\ first\ in\ the\ list\ and\ so\ on.\n
comment7.params=
comment7.target=void\ categorise()
comment7.text=\n\ Public\ instance\ method\ which\ takes\ no\ arguments\ and\ returns\ no\ value.\ The\ method\n\ iterates\ over\ the\ runners,\ populating\ the\ maps\ juniorResults,\ standardResults\ and\n\ seniorResults\ with\ the\ names\ and\ times\ of\ each\ category\ of\ runner\n
numComments=8
